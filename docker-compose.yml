---
version: '2.1'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    ports:
      - 12181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 12181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"
      - "default:127.0.0.1"
    healthcheck:
      test: echo srvr | nc localhost 12181 | grep Mode || exit 1
      interval: 5s
      timeout: 2s
      retries: 3

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    ports:
      - 22181
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"
      - "default:127.0.0.1"
    healthcheck:
      test: echo srvr | nc localhost 22181 | grep Mode || exit 1
      interval: 5s
      timeout: 2s
      retries: 3

  zookeeper-3:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    ports:
      - 32181
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: localhost:22888:23888;localhost:32888:33888;localhost:42888:43888
    network_mode: host
    extra_hosts:
      - "moby:127.0.0.1"
      - "default:127.0.0.1"
    healthcheck:
      test: echo srvr | nc localhost 32181 | grep Mode || exit 1
      interval: 5s
      timeout: 2s
      retries: 3

  kafka-101:
    image: confluentinc/cp-kafka:latest
    network_mode: host
    restart: unless-stopped
    ports:
      - 19092
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: localhost:12181,localhost:22181,localhost:32181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:19092
    extra_hosts:
      - "moby:127.0.0.1"
      - "default:127.0.0.1"
    healthcheck:
      test: /usr/bin/kafka-run-class kafka.admin.BrokerApiVersionsCommand --bootstrap-server localhost:19092 | grep 101 || exit 1
      interval: 5s
      timeout: 2s
      retries: 3

  kafka-102:
    image: confluentinc/cp-kafka:latest
    network_mode: host
    restart: unless-stopped
    ports:
      - 29092
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
      kafka-101:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 102
      KAFKA_ZOOKEEPER_CONNECT: localhost:12181,localhost:22181,localhost:32181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092
    extra_hosts:
      - "moby:127.0.0.1"
      - "default:127.0.0.1"
    healthcheck:
      test: /usr/bin/kafka-run-class kafka.admin.BrokerApiVersionsCommand --bootstrap-server localhost:29092 | grep 102 || exit 1
      interval: 5s
      timeout: 2s
      retries: 3

  kafka-103:
    image: confluentinc/cp-kafka:latest
    network_mode: host
    restart: unless-stopped
    ports:
      - 39092
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
      kafka-101:
        condition: service_healthy
      kafka-102:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 103
      KAFKA_ZOOKEEPER_CONNECT: localhost:12181,localhost:22181,localhost:32181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:39092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:39092
    extra_hosts:
      - "moby:127.0.0.1"
      - "default:127.0.0.1"
    healthcheck:
      test: /usr/bin/kafka-run-class kafka.admin.BrokerApiVersionsCommand --bootstrap-server localhost:39092 | grep 103 || exit 1
      interval: 5s
      timeout: 2s
      retries: 3

  schema_registry:
    image: confluentinc/cp-schema-registry
    network_mode: host
    restart: unless-stopped
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
      kafka-101:
        condition: service_healthy
      kafka-102:
        condition: service_healthy
      kafka-103:
        condition: service_healthy
    ports:
      - 8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: localhost:12181,localhost:22181,localhost:32181
    extra_hosts:
      - "moby:127.0.0.1"
      - "default:127.0.0.1"
    healthcheck:
      test: curl -s http://localhost:8081/ || exit 1
      interval: 5s
      timeout: 2s
      retries: 3

  connect:
    image: confluentinc/cp-kafka-connect
    restart: unless-stopped
    network_mode: host
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
      kafka-101:
        condition: service_healthy
      kafka-102:
        condition: service_healthy
      kafka-103:
        condition: service_healthy
      schema_registry:
        condition: service_healthy
    ports:
      - 8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'localhost:19092,localhost:29092,localhost:39092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://localhost:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://localhost:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_ZOOKEEPER_CONNECT: 'localhost:12181,localhost:22181,localhost:32181'
    healthcheck:
      test: curl -s http://localhost:8083/ || exit 1
      interval: 5s
      timeout: 2s
      retries: 3
